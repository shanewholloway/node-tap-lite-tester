'use strict';var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};var assert=require('assert');module.exports=exports=createTAP(true);function createTAP(setExitCode_p){var summary={success:null,total_pass:0,total_fail:0};function test(title,cb){if(!cb)return tap.todo(title);else return tap._test(title,cb)}var tap_start=void 0;var tap_go=new Promise(function(resolve){return tap_start=resolve}).then(function(){tap.output=[];tap._output('TAP version 13');if(summary.planned){tap._output('1..'+summary.planned);tap._checkPlannedCount()}return tap});var tap={createTAP:createTAP,summary:summary,TAPTest:TAPTest,results:[summary],start:function start(count){if(count)tap.plan(count);return tap_go},plan:function plan(count){if(tap.output)throw new Error('Cannot change plan after running has commenced');summary.planned=count;return tap_go},addPlans:function addPlans(inc_count){return tap.plan((inc_count||1)+(summary.planned||0))},skip:function skip(title,cb,reason){return tap._skip(title,cb,'SKIP',reason)},todo:function todo(title,cb,reason){return tap._skip(title,cb,'TODO',reason)},failing:function failing(title,cb,reason){return tap._skip(title,cb,'TODO','failing')},only:function only(title,cb){if(tap._only_test)throw new Error('Multiple \'only()\' tests specified');var res=tap._test(title,cb);tap._only_test=tap._all_tests.pop();return res},test_cb:function test_cb(title,cb){return tap._test(title,function(test){return new Promise(function(resolve,reject){test.done=function(err,ans){return err?reject(err):resolve(ans)};try{cb(test)}catch(err){reject(err)}})})},test:test,_test:function _test(title,cb){var test=new tap.TAPTest({title:title,idx:++tap._tap_idx});return tap._addTestPromise(test,tap._withTest(test,cb).then(function(ans){return test.validate(),ans}).then(function(ans){return tap._result(true,test,(typeof ans==='undefined'?'undefined':_typeof(ans))==='object'?ans:undefined)},function(err){return tap._result(false,test,err)}))},_skip:function _skip(title,_cb_,directive,reason){var test=new tap.TAPTest({title:title,directive:[directive||'SKIP',reason].join(' '),idx:++tap._tap_idx});return tap._addTestPromise(test,tap._withTest(test).then(function(){return tap._result(true,test)}))},finish:function finish(count){var setExitCode=arguments.length>1&&arguments[1]!==undefined?arguments[1]:setExitCode_p;if(count)tap.plan(count);var tests=tap._all_tests;tap._all_tests=null;if(tap._only_test){tests.forEach(function(ea){return ea.test.omit=true});tests=[tap._only_test]}tap_start(tap);return Promise.all(tests).then(function(){summary.success=summary.total_fail===0;if(setExitCode)tap.setExitCode();return tap})},setExitCode:function setExitCode(){process.exitCode=summary.success?0:1},log:function log(out){console.log(out)},_output:function _output(out){tap.output.push(out);tap.log(out)},_result:function _result(success,test,extra){if(success)++summary.total_pass;else++summary.total_fail;if(test.omit)return tap.results[test.idx]=null;var out=tap._report(success,test,extra,tap.inspect);if(test.idx)tap.results[test.idx]=extra===undefined?{success:success,test:test}:{success:success,test:test,extra:extra};tap._output(out)},_report:_tap_report,_withTest:function _withTest(test,cb){return tap_go.then(function(){return!cb||test.omit?null:cb(test)})},_addTestPromise:function _addTestPromise(test,promise){promise.test=test;tap._all_tests.push(promise);return promise},_checkPlannedCount:function _checkPlannedCount(){if(summary.planned==tap._tap_idx)return true;if(summary.planned==null)return true;tap._result(false,{title:'TAP planned for '+summary.planned+', but registered '+tap._tap_idx+' tests',idx:'plan'});return false}};test.only=tap.only;test.skip=tap.skip;test.todo=tap.todo;test.failing=tap.failing;test.cb=tap.test_cb;return Object.defineProperties(tap,{_all_tests:{value:[],writable:true},_tap_idx:{value:0,writable:true}})}function TAPTest(options){var _this=this;Object.keys(options).forEach(function(k){return _this[k]=options[k]})}TAPTest.prototype.assertions=0;TAPTest.prototype.failed=0;TAPTest.prototype.plan=function(count){this.planned=count;return this};TAPTest.prototype.validate=function(){if(this.planned!=null&&this.planned!=this.assertions)throw new Error('Test performed '+this.assertions+' assertions, but planned '+this.planned+' assertions');if(this.failed>0)throw new Error('Test failed '+this.failed+' of '+this.assertions+' assertions performed');return this};Object.keys(assert).forEach(function(k){var inner_fn=assert[k];TAPTest.prototype[k]=function(){this.assertions+=1;try{return inner_fn.apply(null,arguments)}catch(err){this.failed+=1;throw err}}});function _tap_asYamlExtra(key,value){if(!Array.isArray(value))return key+': '+JSON.stringify(value);if(0===value.length)return key+': []\n';var lines=value.map(function(ea){return JSON.stringify(ea)});var len=lines.reduce(function(r,e){return r+e.length},0);if(len<40)return key+': ['+lines.join(', ')+']\n';lines.unshift('');return key+':'+lines.join('\n - ')+'\n'}function _tap_report(success,test,extra,debug_inspect){if(test.omit)return;var out=[success?'ok':'not ok',Number(test.idx),'- '+test.title];if(test.directive)out.push('# '+test.directive);out=out.filter(function(v){return v}).join(' ');if(null!=extra){var lines=void 0;if('string'===typeof extra)lines=extra.split(/\r?\n/);else if('object'===(typeof extra==='undefined'?'undefined':_typeof(extra)))lines=Object.keys(extra).map(function(k){return _tap_asYamlExtra(k,extra[k])}).filter(function(e){return e});if(lines.length){lines=lines.join('\n').split('\n');lines.push('')}else if(extra.toString)lines=extra.toString().split(/\r?\n/);if(debug_inspect)lines=lines.concat(debug_inspect(extra).split(/\r?\n/).map(function(l){return'# '+l}));lines.unshift('');out+='\n  ---'+lines.join('\n  ')+'\n'}return out}
