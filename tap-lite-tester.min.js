'use strict';var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};var inspect=require('util').inspect;module.exports=exports=createTAP(true);function createTAP(setExitCode_p){var summary={success:null,total_pass:0,total_fail:0};var tap={createTAP:createTAP,summary:summary,results:[summary],output:[],start:function start(count){tap._output('TAP version 13');if(count)tap.plan(count)},plan:function plan(count){summary.planned=count;tap._output('1..'+count)},skip:function skip(title,cb){var test={title:title,directive:'SKIP',idx:++tap._tap_idx};return tap._addTestPromise(Promise.resolve(test).then(function(){return tap._result(true,test)}))},todo:function todo(title,cb){var test={title:title,directive:'TODO',idx:++tap._tap_idx};return tap._addTestPromise(Promise.resolve(test).then(function(){return tap._result(false,test)}))},test:function test(title,cb){var test={title:title,idx:++tap._tap_idx};return tap._addTestPromise(Promise.resolve(test).then(cb).then(function(ans){return tap._result(true,test,(typeof ans==='undefined'?'undefined':_typeof(ans))==='object'?ans:undefined)},function(err){return tap._result(false,test,err)}))},finish:function finish(count){var setExitCode=arguments.length>1&&arguments[1]!==undefined?arguments[1]:setExitCode_p;if(count)tap.plan(count);tap._checkPlannedCount();var tests=tap._all_tests;tap._all_tests=null;return Promise.all(tests).then(function(){summary.success=summary.total_fail===0;if(setExitCode)tap.setExitCode();return tap})},setExitCode:function setExitCode(){process.exitCode=summary.success?0:1},log:function log(out){console.log(out)},_output:function _output(out){tap.output.push(out);tap.log(out)},_result:function _result(success,test,extra){if(success)++summary.total_pass;else++summary.total_fail;var out=tap._report(success,test,extra);if(test.idx)tap.results[test.idx]=extra===undefined?{success:success,test:test}:{success:success,test:test,extra:extra};tap._output(out)},_report:_tap_report,_addTestPromise:function _addTestPromise(promise){tap._all_tests.push(promise);return promise},_checkPlannedCount:function _checkPlannedCount(){if(summary.planned==tap._tap_idx)return true;if(summary.planned==null)return true;tap._result(false,{title:'TAP planned for '+summary.planned+', but registered '+tap._tap_idx+' tests',idx:'plan'});return false}};return Object.defineProperties(tap,{_all_tests:{value:[],writable:true},_tap_idx:{value:0,writable:true}})}function _tap_asYamlExtra(key,value){if(!Array.isArray(value))return key+': '+JSON.stringify(value);var lines=value.map(function(ea){return JSON.stringify(ea)});lines.unshift('');return key+':\n'+lines.join()+'\n'}function _tap_report(success,test,extra){var out=[success?'ok':'not ok',Number(test.idx),'- '+test.title];if(test.directive)out.push('# '+test.directive);out=out.filter(function(v){return v}).join(' ');if(extra!=null){var lines=void 0;if('string'===typeof extra)lines=extra.split(/\r?\n/);else if('object'===(typeof extra==='undefined'?'undefined':_typeof(extra)))lines=Object.keys(extra).map(function(k){return _tap_asYamlExtra(k,extra[k])}).filter(function(e){return e});if(lines.length)lines=lines.join('\n').split('\n');else lines=inspect(extra).split(/\r?\n/).map(function(l){return'# '+l});lines.unshift('');out+='\n  ---'+lines.join('\n  ')+'\n'}return out}
